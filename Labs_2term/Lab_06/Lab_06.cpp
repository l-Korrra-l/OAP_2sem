/*4. Создать проект, демонстрирующий работу со стеком, организованным на основе списка, в соответствии со своим вариантом для 
данных из таблицы ниже.Все операции со стеком реализовать через функции.Дополнить проект функциями очистки стека clear(), 
сохранения в файл и считывания из файла.
Проект должен содержать три части : главная функция, файл с функциями работы со стеком и заголовочный файл.Создать интерфейс
в виде меню.
Разработать функцию, которая определяет, есть ли в стеке хотя бы один элемент, который равен  следующему за ним  элементу.*/

//------------------------------------------------------------------------------------------------------------------------

//5. Дополнительные задания.
//1. Дана величина a строкового типа из четного количества символов.Получить и напечатать величину b, состоящую из символов
//первой половины величины a, записанных в обратном порядке, после которых идут символы второй половины величины a, также 
//записанные в обратном порядке(например, при а = “привет” b должно быть равно «ипртев»).
//2. Создать стек с целочисленным информационным полем.Заполнить его длинами строк, считанных из файла.Распечатаьть на
//экране содержимое стека.Указать номер и длину последней строки файла.

//----------------------------------------------------------------------------------------------------------------------------
//2	Разработать функцию, которая удаляет из стека первый отрицательный элемент, если такой есть.

#include "Lab_06.h"


int main()
{
	setlocale(LC_ALL, "Rus");
	int choice;
	Stack* myStk = new Stack; //выделение памяти для стека
	myStk->head = NULL;       //инициализация первого элемента	
	bool a;
	for (;;)
	{
		cout << "Выберите команду:" << endl;
		cout << "1 - Добавление элемента в стек" << endl;
		cout << "2 - Извлечение элемента из стека" << endl;
		cout << "3 - Вывод стека" << endl;
		cout << "4 - Очистка стека" << endl;
		cout << "5 - Запись в файл" << endl;
		cout << "6 - Считывание из файла" << endl;
		cout << "7 - Вариант 4" << endl;
		cout << "8 - Доп 1" << endl;
		cout << "9 - Доп 2" << endl;
		cout << "10- Доп 3" << endl;
		cout << "0 - Выход" << endl;
		cin >> choice;
		switch (choice)
		{
		case 1: cout << "Введите элемент: " << endl;
			cin >> choice;
			push(choice, myStk);
			break;
		case 2: choice = pop(myStk);
			if (choice != -1)
				cout << "Извлеченный элемент: " << choice << endl;
			break;
		case 3: cout << "Весь стек: " << endl;
			show(myStk);
			break;
		case 4:clear(myStk); cout << "Стек очищен" << endl; break;
		case 5:toFile(myStk); cout << "\nСписок занесен в файл\n"; break;
		case 6:fromFile(myStk); cout << "\nСписок считан из файлаt\n"; break;
		case 7:a=if4(myStk); if (a) cout << "\nв стеке есть хотя бы один элемент, который равен  следующему за ним\n"; 
			else cout << "\nв стеке нет элемента, который равен  следующему за ним\n"; break;
		case 8: dop1(); break;
		case 9: dop2(); break;
		case 10: dop3(myStk); break;
		case 0: return 0;
			break;
		}
	}
	return 0;
}







